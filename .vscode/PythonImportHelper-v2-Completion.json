[
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "AsyncGenerator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "AsyncGenerator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ui",
        "importPath": "nicegui",
        "description": "nicegui",
        "isExtraImport": true,
        "detail": "nicegui",
        "documentation": {}
    },
    {
        "label": "ui",
        "importPath": "nicegui",
        "description": "nicegui",
        "isExtraImport": true,
        "detail": "nicegui",
        "documentation": {}
    },
    {
        "label": "ui",
        "importPath": "nicegui",
        "description": "nicegui",
        "isExtraImport": true,
        "detail": "nicegui",
        "documentation": {}
    },
    {
        "label": "QdrantVectorDatabaseOperations",
        "importPath": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "description": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "isExtraImport": true,
        "detail": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "documentation": {}
    },
    {
        "label": "QdrantVectorDatabaseOperations",
        "importPath": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "description": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "isExtraImport": true,
        "detail": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "documentation": {}
    },
    {
        "label": "QdrantVectorDatabaseOperations",
        "importPath": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "description": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "isExtraImport": true,
        "detail": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "documentation": {}
    },
    {
        "label": "UIController",
        "importPath": "ui_controls.UIControllers",
        "description": "ui_controls.UIControllers",
        "isExtraImport": true,
        "detail": "ui_controls.UIControllers",
        "documentation": {}
    },
    {
        "label": "UIController",
        "importPath": "ui_controls.UIControllers",
        "description": "ui_controls.UIControllers",
        "isExtraImport": true,
        "detail": "ui_controls.UIControllers",
        "documentation": {}
    },
    {
        "label": "UIController",
        "importPath": "ui_controls.UIControllers",
        "description": "ui_controls.UIControllers",
        "isExtraImport": true,
        "detail": "ui_controls.UIControllers",
        "documentation": {}
    },
    {
        "label": "AsyncQdrantClient",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "load_configurations",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_qdrant_client",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_embedding_model",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "Configurations",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "AsyncQdrantClient",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "load_configurations",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_qdrant_client",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_embedding_model",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "Configurations",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "AsyncQdrantClient",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "load_configurations",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_qdrant_client",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_embedding_model",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "Configurations",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "isExtraImport": true,
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "asynccontextmanager",
        "importPath": "contextlib",
        "description": "contextlib",
        "isExtraImport": true,
        "detail": "contextlib",
        "documentation": {}
    },
    {
        "label": "asynccontextmanager",
        "importPath": "contextlib",
        "description": "contextlib",
        "isExtraImport": true,
        "detail": "contextlib",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "QdrantClient",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "AsyncQdrantClient",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "QdrantClient",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "AsyncQdrantClient",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "QdrantClient",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "AsyncQdrantClient",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "qdrant_client",
        "description": "qdrant_client",
        "isExtraImport": true,
        "detail": "qdrant_client",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "qdrant_client.http",
        "description": "qdrant_client.http",
        "isExtraImport": true,
        "detail": "qdrant_client.http",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "qdrant_client.http",
        "description": "qdrant_client.http",
        "isExtraImport": true,
        "detail": "qdrant_client.http",
        "documentation": {}
    },
    {
        "label": "onnxruntime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "onnxruntime",
        "description": "onnxruntime",
        "detail": "onnxruntime",
        "documentation": {}
    },
    {
        "label": "InferenceSession",
        "importPath": "onnxruntime",
        "description": "onnxruntime",
        "isExtraImport": true,
        "detail": "onnxruntime",
        "documentation": {}
    },
    {
        "label": "InferenceSession",
        "importPath": "onnxruntime",
        "description": "onnxruntime",
        "isExtraImport": true,
        "detail": "onnxruntime",
        "documentation": {}
    },
    {
        "label": "InferenceSession",
        "importPath": "onnxruntime",
        "description": "onnxruntime",
        "isExtraImport": true,
        "detail": "onnxruntime",
        "documentation": {}
    },
    {
        "label": "AutoTokenizer",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "PreTrainedTokenizer",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "PreTrainedTokenizerFast",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "AutoTokenizer",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "PreTrainedTokenizer",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "PreTrainedTokenizerFast",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "AutoTokenizer",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "PreTrainedTokenizer",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "PreTrainedTokenizerFast",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "loguru",
        "description": "loguru",
        "isExtraImport": true,
        "detail": "loguru",
        "documentation": {}
    },
    {
        "label": "Configurations",
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "isExtraImport": true,
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "IncludedKeysValues",
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "isExtraImport": true,
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "IncludedKeysValues",
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "isExtraImport": true,
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "Configurations",
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "isExtraImport": true,
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "SearchRequest",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchResponse",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchDocument",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "CollectionPayload",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "ListDocument",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchRequest",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchResponse",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchDocument",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "CollectionPayload",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "ListDocument",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "CreateCollectionRequest",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "BasicResponse",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchDocument",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchRequest",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchResponse",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "StoreDocumentRequest",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "WholeCollectionOperationBaseRequest",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "ListDocument",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "DeleteDocumentsRequest",
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "isExtraImport": true,
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "tqdm",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tqdm",
        "description": "tqdm",
        "detail": "tqdm",
        "documentation": {}
    },
    {
        "label": "TextSplitter",
        "importPath": "semantic_text_splitter",
        "description": "semantic_text_splitter",
        "isExtraImport": true,
        "detail": "semantic_text_splitter",
        "documentation": {}
    },
    {
        "label": "TextSplitter",
        "importPath": "semantic_text_splitter",
        "description": "semantic_text_splitter",
        "isExtraImport": true,
        "detail": "semantic_text_splitter",
        "documentation": {}
    },
    {
        "label": "MainPage",
        "importPath": "ui_controls.MainPage",
        "description": "ui_controls.MainPage",
        "isExtraImport": true,
        "detail": "ui_controls.MainPage",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "fastapi.logger",
        "description": "fastapi.logger",
        "isExtraImport": true,
        "detail": "fastapi.logger",
        "documentation": {}
    },
    {
        "label": "JSONResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "QdrantVectorDatabaseOperations",
        "importPath": "utilities.QdrantVectorDatabaseOperations",
        "description": "utilities.QdrantVectorDatabaseOperations",
        "isExtraImport": true,
        "detail": "utilities.QdrantVectorDatabaseOperations",
        "documentation": {}
    },
    {
        "label": "NotesCollectionsVectorParameters",
        "kind": 6,
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "peekOfCode": "class NotesCollectionsVectorParameters(BaseModel):\n    size: int\n    distance: Literal['cosine']\nclass NotesCollectionsConfigurations(BaseModel):\n    notes_collections: List[str]\n    notes_collections_vector_parameters: NotesCollectionsVectorParameters\n    text_split_maximum_size: int\n\"\"\"\nQdrant\n\"\"\"",
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "NotesCollectionsConfigurations",
        "kind": 6,
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "peekOfCode": "class NotesCollectionsConfigurations(BaseModel):\n    notes_collections: List[str]\n    notes_collections_vector_parameters: NotesCollectionsVectorParameters\n    text_split_maximum_size: int\n\"\"\"\nQdrant\n\"\"\"\nclass QdrantConfigurations(BaseModel):\n    host: str\n    port: int",
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "QdrantConfigurations",
        "kind": 6,
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "peekOfCode": "class QdrantConfigurations(BaseModel):\n    host: str\n    port: int\n\"\"\"\nEmbedding Configurations\n\"\"\"\nclass EmbeddingModelConfigurations(BaseModel):\n    model_path: str\n    tokenizer_path: str\n    onnx_providers: List[",
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "EmbeddingModelConfigurations",
        "kind": 6,
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "peekOfCode": "class EmbeddingModelConfigurations(BaseModel):\n    model_path: str\n    tokenizer_path: str\n    onnx_providers: List[\n        Literal['CPUExecutionProvider', 'CUDAExecutionProvider']\n    ]\n\"\"\"\nScalar Database Configurations\n\"\"\"\nclass IncludedKeysValues(BaseModel):",
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "IncludedKeysValues",
        "kind": 6,
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "peekOfCode": "class IncludedKeysValues(BaseModel):\n    collection: str\n    owner_id: str\n    created_at: str\nclass ScalarDatabaseConfigurations(BaseModel):\n    database_type: Literal['qdrant']\n    table_name: str\n\"\"\"\nConfigurations\n\"\"\"",
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "ScalarDatabaseConfigurations",
        "kind": 6,
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "peekOfCode": "class ScalarDatabaseConfigurations(BaseModel):\n    database_type: Literal['qdrant']\n    table_name: str\n\"\"\"\nConfigurations\n\"\"\"\nclass Configurations(BaseModel):\n    host: str\n    port: int\n    log_level: Literal['info', 'debug', 'warning', 'error']",
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "Configurations",
        "kind": 6,
        "importPath": "base_models.ServiceManagement",
        "description": "base_models.ServiceManagement",
        "peekOfCode": "class Configurations(BaseModel):\n    host: str\n    port: int\n    log_level: Literal['info', 'debug', 'warning', 'error']\n    qdrant_configurations: QdrantConfigurations\n    notes_collections_configurations: NotesCollectionsConfigurations\n    scalar_database_configurations: ScalarDatabaseConfigurations\n    embedding_model_configurations: EmbeddingModelConfigurations",
        "detail": "base_models.ServiceManagement",
        "documentation": {}
    },
    {
        "label": "BasicResponse",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class BasicResponse(BaseModel):\n    status: Literal['success', 'error']\n    message: str\n    data: Optional[dict] = {}\nclass CreateCollectionRequest(BaseModel):\n    collection_name: str\n    owner_id: str\nclass SearchRequest(BaseModel):\n    collection_name: str\n    query: str",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "CreateCollectionRequest",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class CreateCollectionRequest(BaseModel):\n    collection_name: str\n    owner_id: str\nclass SearchRequest(BaseModel):\n    collection_name: str\n    query: str\n    top_n: int\nclass SearchDocument(BaseModel):\n    id: Union[int | str]\n    content: str",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchRequest",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class SearchRequest(BaseModel):\n    collection_name: str\n    query: str\n    top_n: int\nclass SearchDocument(BaseModel):\n    id: Union[int | str]\n    content: str\n    relevance_score: float\nclass DeleteDocumentsRequest(BaseModel):\n    collection_name: str",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchDocument",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class SearchDocument(BaseModel):\n    id: Union[int | str]\n    content: str\n    relevance_score: float\nclass DeleteDocumentsRequest(BaseModel):\n    collection_name: str\n    document_ids: List[int]\nclass ListDocument(BaseModel):\n    id: Union[int | str]\n    content: str",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "DeleteDocumentsRequest",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class DeleteDocumentsRequest(BaseModel):\n    collection_name: str\n    document_ids: List[int]\nclass ListDocument(BaseModel):\n    id: Union[int | str]\n    content: str\n# put this into the `BasicResponse`'s data key\nclass SearchResponse(BasicResponse):\n    documents: List[SearchDocument]\nclass StoreDocumentRequest(BaseModel):",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "ListDocument",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class ListDocument(BaseModel):\n    id: Union[int | str]\n    content: str\n# put this into the `BasicResponse`'s data key\nclass SearchResponse(BasicResponse):\n    documents: List[SearchDocument]\nclass StoreDocumentRequest(BaseModel):\n    collection_name: str\n    content: str\nclass CollectionPayload(BaseModel):",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "SearchResponse",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class SearchResponse(BasicResponse):\n    documents: List[SearchDocument]\nclass StoreDocumentRequest(BaseModel):\n    collection_name: str\n    content: str\nclass CollectionPayload(BaseModel):\n    numeric_id: int\n    collection_name: str\n    content: str\nclass WholeCollectionOperationBaseRequest(BaseModel):",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "StoreDocumentRequest",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class StoreDocumentRequest(BaseModel):\n    collection_name: str\n    content: str\nclass CollectionPayload(BaseModel):\n    numeric_id: int\n    collection_name: str\n    content: str\nclass WholeCollectionOperationBaseRequest(BaseModel):\n    \"\"\"\n    since when operating on a collection requires a collection name anyway,",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "CollectionPayload",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class CollectionPayload(BaseModel):\n    numeric_id: int\n    collection_name: str\n    content: str\nclass WholeCollectionOperationBaseRequest(BaseModel):\n    \"\"\"\n    since when operating on a collection requires a collection name anyway,\n    this base request class provides common fields for all operations on a \n    collection\n    \"\"\"",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "WholeCollectionOperationBaseRequest",
        "kind": 6,
        "importPath": "base_models.UserOperations",
        "description": "base_models.UserOperations",
        "peekOfCode": "class WholeCollectionOperationBaseRequest(BaseModel):\n    \"\"\"\n    since when operating on a collection requires a collection name anyway,\n    this base request class provides common fields for all operations on a \n    collection\n    \"\"\"\n    collection_name: str",
        "detail": "base_models.UserOperations",
        "documentation": {}
    },
    {
        "label": "MainPage",
        "kind": 6,
        "importPath": "ui_controls.MainPage",
        "description": "ui_controls.MainPage",
        "peekOfCode": "class MainPage:\n    def __init__(\n        self, \n        ui_controller: UIController, \n        collection_names: CollectionNames, \n        operations_object: QdrantVectorDatabaseOperations\n    ) -> None:\n        # automate dark mode switch\n        self.dark = ui.dark_mode(\n            value=None",
        "detail": "ui_controls.MainPage",
        "documentation": {}
    },
    {
        "label": "UIController",
        "kind": 6,
        "importPath": "ui_controls.UIControllers",
        "description": "ui_controls.UIControllers",
        "peekOfCode": "class UIController:\n    def __init__(\n        self, \n        operations_object: QdrantVectorDatabaseOperations, \n        collection_names: CollectionNames\n    ) -> None:\n        self.operations_object = operations_object\n        self.active_document: str = \"\"\n        self.active_document_state: str = \"\"\n        self.search_results: List[dict] = []",
        "detail": "ui_controls.UIControllers",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "kind": 2,
        "importPath": "ui_controls.UIControllers",
        "description": "ui_controls.UIControllers",
        "peekOfCode": "def async_to_sync(awaitable) -> any:\n    loop = asyncio.get_event_loop()\n    return loop.run_until_complete(awaitable)\nclass UIController:\n    def __init__(\n        self, \n        operations_object: QdrantVectorDatabaseOperations, \n        collection_names: CollectionNames\n    ) -> None:\n        self.operations_object = operations_object",
        "detail": "ui_controls.UIControllers",
        "documentation": {}
    },
    {
        "label": "CollectionNames",
        "kind": 6,
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "peekOfCode": "class CollectionNames:\n    def __init__(self) -> None:\n        self.file_dictionary: dict = {\n            \"collections\": []\n        }\n    def load_collection_names(\n        self,\n        collection_names_filepath: str = \"./configurations/CollectionNames.json\"\n    ) -> None:\n        # check if the directory exists",
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "load_configurations",
        "kind": 2,
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "peekOfCode": "def load_configurations() -> Configurations:\n    \"\"\"\n    a method to initialize the configurations for the service.\n    \"\"\"\n    try:\n        with open(\n            file='./configurations/Configurations.json', \n            mode='r', \n            encoding='utf-8'\n        ) as config_file:",
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_qdrant_client",
        "kind": 2,
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "peekOfCode": "def initialize_qdrant_client(configurations: Configurations) -> Tuple[\n    AsyncQdrantClient, QdrantClient\n]:\n    # acquire qdrant client first\n    asynchronous_qdrant_client = AsyncQdrantClient(\n        host=configurations.qdrant_configurations.host,\n        port=configurations.qdrant_configurations.port\n    )\n    synchronous_qdrant_client = QdrantClient(\n        host=configurations.qdrant_configurations.host,",
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "initialize_embedding_model",
        "kind": 2,
        "importPath": "utilities.Lifespan",
        "description": "utilities.Lifespan",
        "peekOfCode": "def initialize_embedding_model(configurations: Configurations) -> Tuple[\n    InferenceSession, Union[PreTrainedTokenizer,PreTrainedTokenizerFast]\n]:\n    \"\"\"\n    load embedding model and tokenizer upon service startup\n    \"\"\"\n    try:\n        tokenizer: PreTrainedTokenizer | PreTrainedTokenizerFast = AutoTokenizer.from_pretrained(\n            pretrained_model_name_or_path=configurations.embedding_model_configurations.tokenizer_path\n        )",
        "detail": "utilities.Lifespan",
        "documentation": {}
    },
    {
        "label": "QdrantVectorDatabaseOperations",
        "kind": 6,
        "importPath": "utilities.QdrantVectorDatabaseOperations",
        "description": "utilities.QdrantVectorDatabaseOperations",
        "peekOfCode": "class QdrantVectorDatabaseOperations:\n    def __init__(\n        self, \n        configurations: Configurations, \n        asynchronous_qdrant_client: AsyncQdrantClient,\n        tokenizer: Union[PreTrainedTokenizer, PreTrainedTokenizerFast],\n        onnx_embedding_model: InferenceSession\n    ) -> None:\n        self.configurations = configurations\n        self.asynchronous_qdrant_client = asynchronous_qdrant_client",
        "detail": "utilities.QdrantVectorDatabaseOperations",
        "documentation": {}
    },
    {
        "label": "QdrantVectorDatabaseOperations",
        "kind": 6,
        "importPath": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "description": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "peekOfCode": "class QdrantVectorDatabaseOperations:\n    def __init__(\n        self, \n        configurations: Configurations, \n        qdrant_client: QdrantClient,\n        tokenizer: Union[PreTrainedTokenizer, PreTrainedTokenizerFast],\n        onnx_embedding_model: InferenceSession\n    ) -> None:\n        self.configurations = configurations\n        self.qdrant_client = qdrant_client",
        "detail": "utilities.QdrantVectorDatabaseOperationsSynchronous",
        "documentation": {}
    },
    {
        "label": "operations_object",
        "kind": 5,
        "importPath": "GUI",
        "description": "GUI",
        "peekOfCode": "operations_object = QdrantVectorDatabaseOperations(\n    configurations=configurations,\n    qdrant_client=synchronous_qdrant_client,\n    tokenizer=tokenizer,\n    onnx_embedding_model=onnx_session\n)\n# check what collections that we currently have\ncollection_names = CollectionNames()\ncollection_names.load_collection_names()\n# initiate a stateful ui controller",
        "detail": "GUI",
        "documentation": {}
    },
    {
        "label": "collection_names",
        "kind": 5,
        "importPath": "GUI",
        "description": "GUI",
        "peekOfCode": "collection_names = CollectionNames()\ncollection_names.load_collection_names()\n# initiate a stateful ui controller\nui_controller = UIController(\n    operations_object=operations_object, \n    collection_names=collection_names\n)\nwith ui.row():\n    # initiate the main page\n    main_page = MainPage(",
        "detail": "GUI",
        "documentation": {}
    },
    {
        "label": "ui_controller",
        "kind": 5,
        "importPath": "GUI",
        "description": "GUI",
        "peekOfCode": "ui_controller = UIController(\n    operations_object=operations_object, \n    collection_names=collection_names\n)\nwith ui.row():\n    # initiate the main page\n    main_page = MainPage(\n        ui_controller=ui_controller,\n        collection_names=collection_names, \n        operations_object=operations_object",
        "detail": "GUI",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "Main",
        "description": "Main",
        "peekOfCode": "app = FastAPI(\n    logger=logger, \n    lifespan=lifespan\n)\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],",
        "detail": "Main",
        "documentation": {}
    }
]